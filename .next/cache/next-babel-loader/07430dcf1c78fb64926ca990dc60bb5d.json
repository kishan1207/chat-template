{"ast":null,"code":"var _jsxFileName = \"/home/Kishan/Downloads/theme/helpers/customizerContext/customizerCtx.js\";\nimport React, { useState } from 'react';\nimport Context from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomizerProvider = props => {\n  // set sidebar background layout\n  const addSidebarBackgroundLayout = (e, layout) => {\n    e.preventDefault();\n    document.querySelectorAll('.theme-layout-type li').forEach(item => {\n      item.classList.remove('active');\n    });\n    document.body.className = `sidebar-active main-page ${layout}`;\n    e.currentTarget.classList.add('active');\n  };\n\n  // set layout theme to LTR or RTL\n  const addLayoutType = layoutType => {\n    if (layoutType) {\n      document.body.className = `sidebar-active main-page rtl ${localStorage.getItem('layout_mode')}`;\n      document.querySelector('.rtl-setting').className = 'rtl-setting icon-btn btn-primary rtl';\n    } else {\n      document.body.className = `sidebar-active main-page ${localStorage.getItem('layout_mode')}`;\n      document.querySelector('.rtl-setting').className = 'rtl-setting icon-btn btn-primary';\n    }\n  };\n\n  // set left sidebar to open/close\n  const addSidebarTypes = (e, sidebarType) => {\n    e.preventDefault();\n    document.querySelectorAll('.sidebar-type li').forEach(item => {\n      item.classList.remove('active');\n    });\n    document.querySelector('.main-nav').className = 'main-nav ' + sidebarType;\n    e.currentTarget.classList.add('active');\n  };\n\n  // set themes primary colors\n  const addThemeColors = (e, color) => {\n    document.querySelectorAll('.colors li').forEach(item => {\n      item.classList.remove('active');\n    });\n    // document.getElementById(\"color\").setAttribute(\"href\", `/assets/css/${color}.css`);\n    document.documentElement.className = color || localStorage.getItem('color');\n    e.currentTarget.classList.add('active');\n    localStorage.setItem('color', color);\n  };\n\n  // set wallpapers for chats content\n  const addBackgroundWallpaper = (e, wallpaper) => {\n    document.querySelectorAll('.wallpaper li').forEach(item => {\n      item.classList.remove('active');\n    });\n    if (wallpaper === 0) {\n      document.querySelector('.wallpapers').style = `background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(239, 247, 254))); background-color: transparent; background-blend-mode: unset;`;\n    } else {\n      document.querySelector('.wallpapers').style = `background-image: url(${`/assets/images/wallpaper/${wallpaper}.jpg`}) ; background-color: transparent; background-blend-mode: unset`;\n    }\n    e.currentTarget.classList.add('active');\n  };\n\n  // set wallpapers as gradients for chats content\n  const addBackgroundWallpaperGradients = gradient => {\n    //setBackgroundWallpaperGradients(gradient)\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      addSidebarBackgroundLayout: addSidebarBackgroundLayout,\n      addLayoutType: addLayoutType,\n      addSidebarTypes: addSidebarTypes,\n      addThemeColors: addThemeColors,\n      addBackgroundWallpaper: addBackgroundWallpaper,\n      addBackgroundWallpaperGradients: addBackgroundWallpaperGradients\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\nexport default CustomizerProvider;","map":{"version":3,"names":["React","useState","Context","jsxDEV","_jsxDEV","CustomizerProvider","props","addSidebarBackgroundLayout","e","layout","preventDefault","document","querySelectorAll","forEach","item","classList","remove","body","className","currentTarget","add","addLayoutType","layoutType","localStorage","getItem","querySelector","addSidebarTypes","sidebarType","addThemeColors","color","documentElement","setItem","addBackgroundWallpaper","wallpaper","style","addBackgroundWallpaperGradients","gradient","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/Kishan/Downloads/theme/helpers/customizerContext/customizerCtx.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Context from './index';\n\nconst CustomizerProvider = (props) => {\n  \n  // set sidebar background layout\n  const addSidebarBackgroundLayout = (e, layout) => {\n    e.preventDefault();\n    document.querySelectorAll('.theme-layout-type li').forEach((item) => {\n      item.classList.remove('active');\n    });\n    document.body.className = `sidebar-active main-page ${layout}`;\n    e.currentTarget.classList.add('active');\n  };\n\n  // set layout theme to LTR or RTL\n  const addLayoutType = (layoutType) => {\n    if (layoutType) {\n      document.body.className = `sidebar-active main-page rtl ${localStorage.getItem(\n        'layout_mode'\n      )}`;\n      document.querySelector('.rtl-setting').className =\n        'rtl-setting icon-btn btn-primary rtl';\n    } else {\n      document.body.className = `sidebar-active main-page ${localStorage.getItem(\n        'layout_mode'\n      )}`;\n      document.querySelector('.rtl-setting').className =\n        'rtl-setting icon-btn btn-primary';\n    }\n  };\n\n  // set left sidebar to open/close\n  const addSidebarTypes = (e, sidebarType) => {\n    e.preventDefault();\n    document.querySelectorAll('.sidebar-type li').forEach((item) => {\n      item.classList.remove('active');\n    });\n    document.querySelector('.main-nav').className = 'main-nav ' + sidebarType;\n    e.currentTarget.classList.add('active');\n  };\n\n  // set themes primary colors\n  const addThemeColors = (e, color) => {\n    document.querySelectorAll('.colors li').forEach((item) => {\n      item.classList.remove('active');\n    });\n    // document.getElementById(\"color\").setAttribute(\"href\", `/assets/css/${color}.css`);\n    document.documentElement.className = color || localStorage.getItem('color');\n    e.currentTarget.classList.add('active');\n    localStorage.setItem('color', color);\n  };\n\n  // set wallpapers for chats content\n  const addBackgroundWallpaper = (e, wallpaper) => {\n    document.querySelectorAll('.wallpaper li').forEach((item) => {\n      item.classList.remove('active');\n    });\n\n    if (wallpaper === 0) {\n      document.querySelector(\n        '.wallpapers'\n      ).style = `background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(239, 247, 254))); background-color: transparent; background-blend-mode: unset;`;\n    } else {\n      document.querySelector(\n        '.wallpapers'\n      ).style = `background-image: url(${`/assets/images/wallpaper/${wallpaper}.jpg`}) ; background-color: transparent; background-blend-mode: unset`;\n    }\n    e.currentTarget.classList.add('active');\n  };\n\n  // set wallpapers as gradients for chats content\n  const addBackgroundWallpaperGradients = (gradient) => {\n    //setBackgroundWallpaperGradients(gradient)\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        addSidebarBackgroundLayout: addSidebarBackgroundLayout,\n        addLayoutType: addLayoutType,\n        addSidebarTypes: addSidebarTypes,\n        addThemeColors: addThemeColors,\n        addBackgroundWallpaper: addBackgroundWallpaper,\n        addBackgroundWallpaperGradients: addBackgroundWallpaperGradients,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default CustomizerProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}